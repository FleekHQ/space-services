service:
  name: ${self:provider.appName}-vault

provider:
  name: aws
  runtime: nodejs12.x
  region: us-west-2
  stage: ${opt:stage}
  appName: space
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - Fn::ImportValue: 'AppDynamoDbTableArn-${self:provider.stage}'
        - Fn::Join:
          - ""
          - - Fn::ImportValue: 'AppDynamoDbTableArn-${self:provider.stage}'
            - "/*"
  domain:
    dev: vault-dev.space.storage
    stg: vault-stg.space.storage
    prd: vault.space.storage

plugins:
  - serverless-jetpack
  - serverless-domain-manager

custom:
  jetpack:
    base: "../../"
  customDomain:
    domainName: ${self:provider.domain.${self:provider.stage}}
    certificateArn: ${ssm:space-api-edge-certificate-arn}
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: false

package:
  exclude:
    - "**/node_modules/aws-sdk/**" # included on Lambda.

functions:
  storeVault:
    handler: dist/store.handler
    environment:
      ENV: ${self:provider.stage}
      SALT_SECRET: ${ssm:vault-salt-secret-${self:provider.stage}~true}
    events:
      - http:
          method: post
          path: /vaults
          cors: true
          authorizer: arn:aws:lambda:${self:provider.region}:${ssm:org-arn}:function:space-rest-${self:provider.stage}-authorizer
          request:
            schema:
              application/json: ${file(schemas/store-vault.json)}

  retrieveVault:
    handler: dist/retrieve.handler
    environment:
      ENV: ${self:provider.stage}
      SALT_SECRET: ${ssm:vault-salt-secret-${self:provider.stage}~true}
    events:
      - http:
          method: post
          path: /vaults/{uuid}
          cors: true
          request:
            schema:
              application/json: ${file(schemas/retrieve-vault.json)}
            parameters:
              paths:
                uuid: true
  # retrieveVaultWithAuth:
  #   handler: dist/retrieve-with-auth.handler
  #   environment:
  #     ENV: ${self:provider.stage}
  #   events:
  #     - http:
  #         method: get
  #         path: /vaults/mine
  #         cors: true
  #         authorizer: arn:aws:lambda:${self:provider.region}:${ssm:org-arn}:function:space-rest-${self:provider.stage}-authorizer