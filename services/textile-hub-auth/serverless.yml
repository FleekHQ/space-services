service:
  name: ${self:provider.appName}-textile-hub-auth

provider:
  name: aws
  runtime: nodejs12.x
  region: us-west-2
  stage: ${opt:stage}
  appName: space
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:GetParameters
      Resource:
        - "arn:aws:ssm:${self:provider.region}:*:parameter/*"
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource:
        - Fn::ImportValue: 'AppDynamoDbTableArn-${self:provider.stage}'
        - Fn::Join:
          - ""
          - - Fn::ImportValue: 'AppDynamoDbTableArn-${self:provider.stage}'
            - "/*"

plugins:
  - serverless-jetpack

custom:
  jetpack:
    base: "../../"

package:
  exclude:
    - "**/node_modules/aws-sdk/**" # included on Lambda.

functions:
  wsConnection:
    handler: dist/default.handler
    events:
      - websocket: $connect
      - websocket: $disconnect
      - websocket: $default

  wsToken:
    handler: dist/token.handler
    timeout: 60
    events:
      - websocket: token
    environment:
      JWT_SECRET: ${ssm:txl-hub-jwt-secret-${self:provider.stage}~true}
      TXL_USER_KEY: ${ssm:txl-user-key-${self:provider.stage}~true}
      TXL_USER_SECRET: ${ssm:txl-user-secret-${self:provider.stage}~true}
      TXL_HUB_URL: ${ssm:txl-hub-url-${self:provider.stage}~true}
      ENV: ${self:provider.stage}
      APIG_ENDPOINT:
        Fn::Join:
          - ''
          - - Ref: WebsocketsApi
            - .execute-api.
            - Ref: AWS::Region
            - .amazonaws.com/
            - ${self:provider.stage}
  wsChallenge:
    handler: dist/challenge.handler
    events:
      - websocket: challenge
    environment:
      ENV: ${self:provider.stage}